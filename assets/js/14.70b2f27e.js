(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{419:function(n,e,t){n.exports=t.p+"assets/img/ldk-block-processing.421f8970.svg"},441:function(n,e,t){"use strict";t.r(e);var o=t(18),a=Object(o.a)({},(function(){var n=this,e=n.$createElement,o=n._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[o("h2",{attrs:{id:"introduction"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[n._v("#")]),n._v(" Introduction")]),n._v(" "),o("p",[n._v("In this guide, we'll explore how to provide chain data to LDK upon startup and\nas new blocks are mined. This allows LDK to maintain channel state and monitor\nfor on-chain channel activity.")]),n._v(" "),o("p",[n._v("LDK maintains channels with your node's peers during the course of node\noperation. When a new channel is opened, the "),o("code",[n._v("ChannelManager")]),n._v(" will keep track of\nthe channel's state and tell the "),o("code",[n._v("ChainMonitor")]),n._v(" that a new channel should be\nwatched. The "),o("code",[n._v("ChainMonitor")]),n._v(" does so by maintaining a "),o("code",[n._v("ChannelMonitor")]),n._v(" for each\nchannel.")]),n._v(" "),o("p",[n._v("When a new block is mined, it is connected to the chain while other blocks may\nbe disconnected if reorganized out. Transactions are confirmed or unconfirmed\nduring this process. You are required to feed this activity to LDK which will\nprocess it by:")]),n._v(" "),o("ul",[o("li",[n._v("Updating channel state")]),n._v(" "),o("li",[n._v("Signaling back transactions to filter")]),n._v(" "),o("li",[n._v("Broadcasting transactions if necessary")])]),n._v(" "),o("p",[n._v("We will walk through this process as depicted here:")]),n._v(" "),o("figure",[o("img",{attrs:{src:t(419),alt:"LDK block processing"}})])])}),[],!1,null,null,null);e.default=a.exports}}]);
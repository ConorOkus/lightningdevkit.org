(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{447:function(t,e,n){"use strict";n.r(e);var a=n(18),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"getting-started"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting Started")]),t._v(" "),n("p",[t._v("Lightning Development Kit (LDK) is a generic library which allows you to build a lightning node without needing to worry about getting all of the lightning state machine, routing, and on-chain punishment code (and other chain interactions) exactly correct. LDK tends to be suitable for use cases where a degree of customization is desired, e.g. your own chain sync, your own key management and/or your own storage/backup logic.")]),t._v(" "),n("p",[t._v("Our "),n("a",{attrs:{href:"https://github.com/lightningdevkit/ldk-sample",target:"_blank",rel:"noopener noreferrer"}},[t._v("sample node"),n("OutboundLink")],1),t._v(" showcases how LDK can be customised. It fetches blockchain data and transacts on-chain via Bitcoin Core RPC/REST. The individual components of the sample are composable. For example, the sample writes channel state to the local filesystem, but this component could be replaced with one that writes this data to the cloud or to multiple locations. You can pick the off-the-shelf parts you want and replace the rest.")])])}),[],!1,null,null,null);e.default=o.exports}}]);